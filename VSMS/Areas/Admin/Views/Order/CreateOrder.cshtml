@{var mem = ViewBag.Member as VSMS.Models.DataModels.Member;}
@{
    ViewBag.Title = "CreateOrder";
    Layout = "~/Areas/Admin/Views/Shared/_LayoutHome.cshtml";
}

<div class="container">
    <div class="row">
        <div class="col-lg-12">
            <div class="card card-primary">
                <div class="card-header">
                    <h3 class="card-title">Add New Record Order Of Member <span class="text-danger" id="txtNameMember">@mem.FullName</span></h3>
                </div>
                <!-- /.card-header -->
                <!-- form start -->
                <form>
                    <div class="card-body">
                        <div class="row">
                            <div class="col-lg-2"></div>
                            <div class="col-lg-8">
                                <div class="form-group">
                                    <label>Member </label>
                                    <input type="text" class="form-control" hidden name="IdMember" value="@mem.Id" readonly id="memberId">
                                    <input type="text" class="form-control" value="@mem.FullName" readonly>
                                </div>
                                <div class="form-group">
                                    <label>Category</label>
                                    <select class="form-control" id="cateDropDownList">
                                    </select>
                                </div>
                                <div class="form-group">
                                    <label>Car List By Category</label>
                                    <select class="form-control" id="carByCateDropDownList">
                                    </select>
                                </div>
                                <div class="form-group">
                                    <label>Quantity</label>
                                    <input type="number" id="quantity" class="form-control" name="quantity" min="1" max="10">
                                </div>

                                <div class="form-check">
                                    <input type="checkbox" class="form-check-input" id="Status" checked>
                                    <label class="form-check-label" for="exampleCheck1">
                                        Status(Waiting for review)
                                    </label>
                                </div>
                                <div class="card-footer">
                                    <button id="addRecordOrder" type="button" class="btn btn-primary">Submit</button>
                                    @Html.ActionLink("Cancel", "Index", null, new { @class = "btn btn-warning" })
                                </div>
                            </div>
                            <div class="col-lg-2"></div>
                        </div>


                    </div>
                    <!-- /.card-body -->


                </form>
            </div>
        </div>
    </div>
</div>

@section Scripts{
    <script>
        $(document).ready(function () {
            //getURLPut();
            function AjaxCall(url, data, type) {
                return $.ajax({
                    url: url,
                    type: type ? type : 'GET',
                    data: data,
                    contentType: 'application/json'
                });
            };
            $('#addRecordOrder').click(function () {
                getURL();
            });


            // ajax call category
            AjaxCall('/Admin/Categories/GetAllData', null).done(function (response) {
                console.log("oke");
                console.log(response);
                if (response.length > 0) {
                    $('#cateDropDownList').html('');
                    var options = '';
                    options += '<option value="">   Select   </option>';
                    $.each(response, function (key, item) {
                        options += '<option value="' + item.Id + '">' + item.CateName + '</option>';
                    });
                    $('#cateDropDownList').html(options);

                    // khách admin chọn category sẽ show ra các ô tô tương ứng danh sách category

                    $("#cateDropDownList").change(function () {
                        data = $('#cateDropDownList option:selected').val()
                        console.log(data);

                        AjaxCall('/Admin/Cars/GetDataByCate/' + data, null).done(function (response) {
                            console.log("oke");
                            console.log(response);
                            if (response.length > 0) {
                                $('#carByCateDropDownList').html('');
                                var options = '';
                                options += '<option value="">   Select   </option>';
                                $.each(response, function (key, item) {
                                    options += '<option value="' + item.Id + '">' + item.CarName + '</option>';
                                });
                                $('#carByCateDropDownList').html(options);
                            }
                            else {
                                var options = '';
                                options += '<option value="Select">There is no data corresponding to the category ^-^</option>';
                                $('#carByCateDropDownList').html(options);
                            }
                        }).fail(function (error) {
                            alert(error.StatusText);
                        });
                    })
                }
            }).fail(function (error) {
                alert(error.StatusText);
            });

        });





        // xử lý logic kiểm tra car có null hay không
        $('#carByCateDropDownList').click(function () {
            data = $('#carByCateDropDownList option:selected').val();
            if (data == undefined) {
                alert("Please choose a category :))");
            }

        });
        // chức năng xử lý url
        function parse_query_string(query) {
            var vars = query.split("/");
            var query_string = {};
            for (var i = 0; i < vars.length; i++) {
                var pair = vars[i].split("=");
                var key = decodeURIComponent(pair[0]);
                var value = decodeURIComponent(pair[1]);
                // If first entry with this name
                if (typeof query_string[key] === "undefined") {
                    query_string[key] = decodeURIComponent(value);
                    // If second entry with this name
                } else if (typeof query_string[key] === "string") {
                    var arr = [query_string[key], decodeURIComponent(value)];
                    query_string[key] = arr;
                    // If third or later entry with this name
                } else {
                    query_string[key].push(decodeURIComponent(value));
                }
            }
            return query_string;
        }

        // xử lý url để lấy tham số id của member
        function getURL() {
            var query_string = "" + window.location.href;
            console.log(query_string);
            var parsed_qs = parse_query_string(query_string);
            var idMember = parsed_qs.id;
            if (idMember == null) {
                toastr.error('Id Member not Found!', 'Thông báo', { timeOut: 2000 });
            } else {
                AddNewRecordOrder(idMember);
            }
        }

        // xử lý url lấy tham số id của member hiển thị lên ô input

        //function getURLPut() {
        //    var query_string = "" + window.location.href;
        //    console.log(query_string);
        //    var parsed_qs = parse_query_string(query_string);
        //    var idMember = parsed_qs.id;
        //    if (idMember == null) {
        //        toastr.error('Id Member not Found!', 'Thông báo', { timeOut: 2000 });
        //    } else {
        //        document.getElementById("memberId").value = idMember + "";
        //    }
        //}

        // chuc nang them moi order
        function AddNewRecordOrder(idMember) {
            var res = validate();
            if (res == false) {
                return false;
            }

            var empObj = {
                MemberId: idMember,
                CarId: $('#carByCateDropDownList').val(),
                Quantity: $('#quantity').val(),
                Total: 0, // set data after
            };

            $.ajax({
                url: "/Admin/Order/CreateNewOrderRecord",
                type: "POST",
                data: empObj,
                success: function (rs) {
                    if (rs.success == 1) {
                        toastr.success('Add Order Seccess!', 'Notification!', { timeOut: 2000 });
                    } else {
                        toastr.error('Add Order False!', 'Notification!', { timeOut: 2000 });
                    }

                },
                error: function (e) {
                    console.log(e.responseText);
                }
            });
        }

       

        //Valdidation using jquery
        function validate() {
            var isValid = true;
            if ($('#cateDropDownList option:selected').length == 0) {
                $('#cateDropDownList').css('border-color', 'Red');
                isValid = false;
            }
            else {
                $('#cateDropDownList').css('border-color', 'lightgrey');
            }
            if ($('#carByCateDropDownList option:selected').length == 0) {
                $('#carByCateDropDownList').css('border-color', 'Red');
                isValid = false;
            }
            else {
                $('#carByCateDropDownList').css('border-color', 'lightgrey');
            }
            if ($('#quantity').val().trim() == "") {
                $('#quantity').css('border-color', 'Red');
                isValid = false;
            }
            else {
                $('#quantity').css('border-color', 'lightgrey');
            }

            return isValid;
        }
    </script>
}